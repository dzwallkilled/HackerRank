#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

struct Player {
    string name;
    int score;
}; 


void swap(Player & a, Player &b) {
    Player c = b;
    b = a;
    a = c;
}

vector<Player> comparator(vector<Player> players) {
    int n = players.size();
    for (int i = 0; i < n; i++) {		
        // Track number of elements swapped during a single array traversal
        int numberOfSwaps = 0;    
	    for (int j = 0; j < n - 1; j++) {
	        // Swap adjacent elements if they are in decreasing order
	        if (players[j].score < players[j + 1].score || (players[j].score == players[j + 1].score && players[j].name < players[j + 1].name)) {
	            swap(players[j], players[j + 1]);
	            numberOfSwaps++;
	        }
	    }
	    // If no elements were swapped during a traversal, array is sorted
	    if (numberOfSwaps == 0) {
	        break;
	    }
    }
    
    return players;
}

int main() {
    
    int n;
    cin >> n;
    vector< Player > players;
    string name;
    int score;
    for(int i = 0; i < n; i++){
        cin >> name >> score;
        Player p1;
        p1.name = name, p1.score = score;
        players.push_back(p1);
    }
    
    vector<Player > answer = comparator(players);
    for(int i = 0; i < answer.size(); i++) {
        cout << answer[i].name << " " << answer[i].score << endl;
    }
    return 0;
}

